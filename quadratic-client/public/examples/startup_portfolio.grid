{"render_dependency":[],"columns":[],"rows":[],"borders":[],"formats":[],"version":1,"cells":[{"x":0,"y":0,"type":"TEXT","value":"Portfolio Valuation Analysis by Revenue Multiple","last_modified":"2022-05-11T16:27:28.266Z"},{"x":0,"y":2,"type":"TEXT","value":"Startup Portfolio","last_modified":"2022-05-11T16:44:34.975Z"},{"x":0,"y":4,"type":"TEXT","value":"Name","last_modified":"2022-05-11T16:44:34.975Z"},{"x":0,"y":6,"type":"TEXT","value":"Airtable","last_modified":"2022-05-11T16:44:34.975Z"},{"x":0,"y":7,"type":"TEXT","value":"Figma","last_modified":"2022-05-12T17:32:06.440Z"},{"x":0,"y":8,"type":"TEXT","value":"Databricks","last_modified":"2022-05-12T17:33:17.712Z"},{"x":0,"y":9,"type":"TEXT","value":"Alchemy","last_modified":"2022-05-12T17:39:57.316Z"},{"x":0,"y":10,"type":"TEXT","value":"FiveTran","last_modified":"2022-05-12T17:39:57.316Z"},{"x":0,"y":11,"type":"TEXT","value":"Starburst","last_modified":"2022-05-12T17:39:57.316Z"},{"x":0,"y":12,"type":"TEXT","value":"JumpCloud","last_modified":"2022-05-12T17:39:57.316Z"},{"x":0,"y":13,"type":"TEXT","value":"Redis Labs","last_modified":"2022-05-12T17:39:57.316Z"},{"x":0,"y":14,"type":"TEXT","value":"Cognite","last_modified":"2022-05-12T17:39:57.316Z"},{"x":0,"y":15,"type":"TEXT","value":"YugaByte","last_modified":"2022-05-12T22:36:51.022Z"},{"x":1,"y":4,"type":"TEXT","value":"Amount","last_modified":"2022-05-11T16:44:34.975Z"},{"x":1,"y":6,"type":"TEXT","value":"10000000","last_modified":"2022-05-12T23:19:46.414Z"},{"x":1,"y":7,"type":"TEXT","value":"8000000","last_modified":"2022-05-12T23:12:37.579Z"},{"x":1,"y":8,"type":"TEXT","value":"23000000","last_modified":"2022-05-12T23:12:24.540Z"},{"x":1,"y":9,"type":"TEXT","value":"15000000","last_modified":"2022-05-12T23:12:33.508Z"},{"x":1,"y":10,"type":"TEXT","value":"22000000","last_modified":"2022-05-12T23:12:42.531Z"},{"x":1,"y":11,"type":"TEXT","value":"5000000","last_modified":"2022-05-12T23:12:45.704Z"},{"x":1,"y":12,"type":"TEXT","value":"17000000","last_modified":"2022-05-12T23:12:53.187Z"},{"x":1,"y":13,"type":"TEXT","value":"10000000","last_modified":"2022-05-12T23:13:00.561Z"},{"x":1,"y":14,"type":"TEXT","value":"5000000","last_modified":"2022-05-12T23:13:06.227Z"},{"x":1,"y":15,"type":"TEXT","value":"18000000","last_modified":"2022-05-12T23:13:13.550Z"},{"x":1,"y":22,"type":"PYTHON","value":"$133,000,000","python_code":"df = getCells((1, 6), (1, 15))\n\ndf[0] = df[0].astype(int)\n\n\"${:,}\".format(int(df.sum(0)))\n","last_modified":"2022-05-12T23:19:46.484Z","python_output":"","array_cells":[],"dependent_cells":[[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13],[1,14],[1,15]]},{"x":1,"y":23,"type":"TEXT","value":"TOTAL","last_modified":"2022-05-14T15:32:56.322Z"},{"x":2,"y":4,"type":"TEXT","value":"Inv Date","last_modified":"2022-05-11T16:44:34.975Z"},{"x":2,"y":6,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T23:13:17.789Z"},{"x":2,"y":7,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:21.878Z"},{"x":2,"y":8,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:35.451Z"},{"x":2,"y":9,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:36.012Z"},{"x":2,"y":10,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:36.421Z"},{"x":2,"y":11,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:37.096Z"},{"x":2,"y":12,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:37.600Z"},{"x":2,"y":13,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:38.006Z"},{"x":2,"y":14,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:38.614Z"},{"x":2,"y":15,"type":"TEXT","value":"1/1/2021","last_modified":"2022-05-12T17:40:39.083Z"},{"x":3,"y":4,"type":"TEXT","value":"Revenue","last_modified":"2022-05-11T16:44:34.975Z"},{"x":3,"y":6,"type":"TEXT","value":"92000000","last_modified":"2022-05-12T17:40:52.543Z"},{"x":3,"y":7,"type":"TEXT","value":"51000000","last_modified":"2022-05-12T22:32:25.399Z"},{"x":3,"y":8,"type":"TEXT","value":"813000000","last_modified":"2022-05-12T22:32:45.387Z"},{"x":3,"y":9,"type":"TEXT","value":"800000000","last_modified":"2022-05-14T15:37:32.352Z"},{"x":3,"y":10,"type":"TEXT","value":"160000000","last_modified":"2022-05-12T22:34:55.536Z"},{"x":3,"y":11,"type":"TEXT","value":"66000000","last_modified":"2022-05-12T22:35:19.653Z"},{"x":3,"y":12,"type":"TEXT","value":"47000000","last_modified":"2022-05-12T22:35:45.695Z"},{"x":3,"y":13,"type":"TEXT","value":"150000000","last_modified":"2022-05-14T15:37:26.034Z"},{"x":3,"y":14,"type":"TEXT","value":"118000000","last_modified":"2022-05-12T22:36:32.494Z"},{"x":3,"y":15,"type":"TEXT","value":"110000000","last_modified":"2022-05-14T15:37:14.349Z"},{"x":3,"y":22,"type":"PYTHON","value":"2407000000","python_code":"df = getCells((3, 6), (3, 15))\n\ndf[0] = df[0].astype(float)\n\nint(df.sum(0))\n","last_modified":"2022-05-14T15:37:32.627Z","python_output":"","array_cells":[],"dependent_cells":[[3,6],[3,7],[3,8],[3,9],[3,10],[3,11],[3,12],[3,13],[3,14],[3,15]]},{"x":4,"y":4,"type":"TEXT","value":"Valuation","last_modified":"2022-05-11T16:44:34.975Z"},{"x":4,"y":6,"type":"TEXT","value":"11000000000","last_modified":"2022-05-12T17:35:44.556Z"},{"x":4,"y":7,"type":"TEXT","value":"10000000000","last_modified":"2022-05-12T17:38:08.595Z"},{"x":4,"y":8,"type":"TEXT","value":"38000000000","last_modified":"2022-05-12T17:38:43.902Z"},{"x":4,"y":9,"type":"TEXT","value":"1020000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":10,"type":"TEXT","value":"5600000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":11,"type":"TEXT","value":"3350000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":12,"type":"TEXT","value":"2620000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":13,"type":"TEXT","value":"2000000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":14,"type":"TEXT","value":"1500000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":15,"type":"TEXT","value":"1300000000","last_modified":"2022-05-12T17:39:57.316Z"},{"x":4,"y":22,"type":"PYTHON","value":"76390000000","python_code":"df = getCells((4, 6), (4, 15))\n\ndf[0] = df[0].astype(float)\n\nint(df.sum(0))\n","last_modified":"2022-05-14T15:32:22.092Z","python_output":"","array_cells":[],"dependent_cells":[[4,6],[4,7],[4,8],[4,9],[4,10],[4,11],[4,12],[4,13],[4,14],[4,15]]},{"x":5,"y":4,"type":"TEXT","value":"Paid Multiple","last_modified":"2022-05-11T16:44:34.975Z"},{"x":5,"y":6,"type":"PYTHON","value":"119.57","python_code":"\nresult = []\nfor i in range(0, 10):\n    result.append(\n        \"{:,.2f}\".format(c(4, 6 + i) / c(3, 6 + i))\n    )\n","last_modified":"2022-05-14T15:37:32.563Z","python_output":"","array_cells":[[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],[5,12],[5,13],[5,14],[5,15]]},{"x":5,"y":7,"type":"COMPUTED","value":"196.08","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":8,"type":"COMPUTED","value":"46.74","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":9,"type":"COMPUTED","value":"1.28","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":10,"type":"COMPUTED","value":"35.00","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":11,"type":"COMPUTED","value":"50.76","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":12,"type":"COMPUTED","value":"55.74","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":13,"type":"COMPUTED","value":"13.33","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":14,"type":"COMPUTED","value":"12.71","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":15,"type":"COMPUTED","value":"11.82","last_modified":"2022-05-14T15:37:32.563Z"},{"x":5,"y":22,"type":"PYTHON","value":"54.30","python_code":"df = getCells((5, 6), (5, 15))\n\ndf[0] = df[0].astype(float)\n\n\"{:.2f}\".format(float(df.mean(0)))\n","last_modified":"2022-05-14T15:41:58.952Z","python_output":"","array_cells":[],"dependent_cells":[[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],[5,12],[5,13],[5,14],[5,15]]},{"x":5,"y":23,"type":"TEXT","value":"AVERAGE","last_modified":"2022-05-14T15:32:53.590Z"},{"x":7,"y":2,"type":"TEXT","value":"Public Market Comps","last_modified":"2022-05-12T22:51:41.212Z"},{"x":7,"y":4,"type":"TEXT","value":"Ticker","last_modified":"2022-05-11T16:47:43.219Z"},{"x":7,"y":6,"type":"TEXT","value":"SNOW","last_modified":"2022-05-17T00:50:37.198Z"},{"x":7,"y":7,"type":"TEXT","value":"ADBE","last_modified":"2022-05-12T18:51:47.993Z"},{"x":7,"y":8,"type":"TEXT","value":"DDOG","last_modified":"2022-05-12T18:51:58.179Z"},{"x":7,"y":9,"type":"TEXT","value":"COIN","last_modified":"2022-05-12T22:41:12.241Z"},{"x":7,"y":10,"type":"TEXT","value":"INFA","last_modified":"2022-05-12T22:42:46.350Z"},{"x":7,"y":11,"type":"TEXT","value":"DOMO","last_modified":"2022-05-12T22:43:11.315Z"},{"x":7,"y":12,"type":"TEXT","value":"OKTA","last_modified":"2022-05-12T22:43:47.094Z"},{"x":7,"y":13,"type":"TEXT","value":"ORCL","last_modified":"2022-05-12T22:44:36.850Z"},{"x":7,"y":14,"type":"TEXT","value":"DOCN","last_modified":"2022-05-12T22:45:02.343Z"},{"x":7,"y":15,"type":"TEXT","value":"ORCL","last_modified":"2022-05-12T22:45:40.301Z"},{"x":8,"y":4,"type":"TEXT","value":"Name","last_modified":"2022-05-12T18:52:46.093Z"},{"x":8,"y":6,"type":"PYTHON","value":"Snowflake Inc.","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 6)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:20],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-17T00:50:37.555Z","python_output":"","array_cells":[[8,6],[9,6],[10,6],[11,6]]},{"x":8,"y":7,"type":"PYTHON","value":"Adobe Inc.","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 7)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:20],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T18:53:44.190Z","python_output":"","array_cells":[[8,7],[9,7],[10,7],[11,7]]},{"x":8,"y":8,"type":"PYTHON","value":"Datadog, Inc. ","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 8)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:14],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T18:54:10.627Z","python_output":"","array_cells":[[8,8],[9,8],[10,8],[11,8]]},{"x":8,"y":9,"type":"PYTHON","value":"Coinbase ","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 9)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:9],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:46:57.451Z","python_output":"","array_cells":[[8,9],[9,9],[10,9],[11,9]]},{"x":8,"y":10,"type":"PYTHON","value":"Informatica ","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 10)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:12],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:47:23.065Z","python_output":"","array_cells":[[8,10],[9,10],[10,10],[11,10]]},{"x":8,"y":11,"type":"PYTHON","value":"Domo, Inc. ","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 11)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:11],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:47:43.347Z","python_output":"","array_cells":[[8,11],[9,11],[10,11],[11,11]]},{"x":8,"y":12,"type":"PYTHON","value":"Okta, Inc. ","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 12)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nprint(stock_financials_json)\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:11],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:48:26.642Z","python_output":"{'results': [{'financials': {'comprehensive_income': {'comprehensive_income_loss_attributable_to_parent': {'label': 'Comprehensive Income/Loss Attributable To Parent', 'value': -225282000.0, 'unit': 'USD', 'order': 300}, 'comprehensive_income_loss': {'label': 'Comprehensive Income/Loss', 'value': -225282000.0, 'unit': 'USD', 'order': 100}, 'comprehensive_income_loss_attributable_to_noncontrolling_interest': {'label': 'Comprehensive Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 200}, 'other_comprehensive_income_loss': {'label': 'Other Comprehensive Income/Loss', 'value': -3971000.0, 'unit': 'USD', 'order': 400}}, 'income_statement': {'operating_expenses': {'label': 'Operating Expenses', 'value': 439562000.0, 'unit': 'USD', 'order': 1000}, 'income_tax_expense_benefit': {'label': 'Income Tax Expense/Benefit', 'value': 667000, 'unit': 'USD', 'order': 2200}, 'basic_earnings_per_share': {'label': 'Basic Earnings Per Share', 'value': -1.44, 'unit': 'USD / shares', 'order': 4200}, 'income_loss_from_continuing_operations_after_tax': {'label': 'Income/Loss From Continuing Operations After Tax', 'value': -221311000.0, 'unit': 'USD', 'order': 1400}, 'gross_profit': {'label': 'Gross Profit', 'value': 241006000.0, 'unit': 'USD', 'order': 800}, 'diluted_earnings_per_share': {'label': 'Diluted Earnings Per Share', 'value': -1.44, 'unit': 'USD / shares', 'order': 4300}, 'income_loss_from_continuing_operations_before_tax': {'label': 'Income/Loss From Continuing Operations Before Tax', 'value': -220644000.0, 'unit': 'USD', 'order': 1500}, 'operating_income_loss': {'label': 'Operating Income/Loss', 'value': -198556000.0, 'unit': 'USD', 'order': 1100}, 'revenues': {'label': 'Revenues', 'value': 350680000.0, 'unit': 'USD', 'order': 100}, 'net_income_loss_attributable_to_noncontrolling_interest': {'label': 'Net Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 3300}, 'interest_expense_operating': {'label': 'Interest Expense, Operating', 'value': 23144000.0, 'unit': 'USD', 'order': 2700}, 'net_income_loss': {'label': 'Net Income/Loss', 'value': -221311000.0, 'unit': 'USD', 'order': 3200}, 'preferred_stock_dividends_and_other_adjustments': {'label': 'Preferred Stock Dividends And Other Adjustments', 'value': 0, 'unit': 'USD', 'order': 3900}, 'net_income_loss_attributable_to_parent': {'label': 'Net Income/Loss Attributable To Parent', 'value': -221311000.0, 'unit': 'USD', 'order': 3500}, 'cost_of_revenue': {'label': 'Cost Of Revenue', 'value': 109674000.0, 'unit': 'USD', 'order': 300}, 'net_income_loss_available_to_common_stockholders_basic': {'label': 'Net Income/Loss Available To Common Stockholders, Basic', 'value': -221311000.0, 'unit': 'USD', 'order': 3700}, 'costs_and_expenses': {'label': 'Costs And Expenses', 'value': 571324000.0, 'unit': 'USD', 'order': 600}, 'participating_securities_distributed_and_undistributed_earnings_loss_basic': {'label': 'Participating Securities, Distributed And Undistributed Earnings/Loss, Basic', 'value': 0, 'unit': 'USD', 'order': 3800}, 'benefits_costs_expenses': {'label': 'Benefits Costs and Expenses', 'value': 571324000.0, 'unit': 'USD', 'order': 200}}, 'balance_sheet': {'current_liabilities': {'label': 'Current Liabilities', 'value': 988166000.0, 'unit': 'USD', 'order': 700}, 'equity_attributable_to_noncontrolling_interest': {'label': 'Equity Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 1500}, 'other_than_fixed_noncurrent_assets': {'label': 'Other Than Fixed Noncurrent Assets', 'value': 6083354000.0, 'unit': 'USD', 'order': 500}, 'noncurrent_liabilities': {'label': 'Noncurrent Liabilities', 'value': 2024252000.0, 'unit': 'USD', 'order': 800}, 'fixed_assets': {'label': 'Fixed Assets', 'value': 60751000.0, 'unit': 'USD', 'order': 400}, 'assets': {'label': 'Assets', 'value': 8996973000.0, 'unit': 'USD', 'order': 100}, 'liabilities': {'label': 'Liabilities', 'value': 3012418000.0, 'unit': 'USD', 'order': 600}, 'noncurrent_assets': {'label': 'Noncurrent Assets', 'value': 6144105000.0, 'unit': 'USD', 'order': 300}, 'equity': {'label': 'Equity', 'value': 5984555000.0, 'unit': 'USD', 'order': 1400}, 'liabilities_and_equity': {'label': 'Liabilities And Equity', 'value': 8996973000.0, 'unit': 'USD', 'order': 1900}, 'current_assets': {'label': 'Current Assets', 'value': 2852868000.0, 'unit': 'USD', 'order': 200}, 'equity_attributable_to_parent': {'label': 'Equity Attributable To Parent', 'value': 5984555000.0, 'unit': 'USD', 'order': 1600}}, 'cash_flow_statement': {}}, 'start_date': '2021-08-01', 'end_date': '2021-10-31', 'filing_date': '2021-12-02', 'cik': '0001660134', 'company_name': 'Okta, Inc.', 'fiscal_period': 'Q3', 'fiscal_year': '2022', 'source_filing_url': 'https://api.polygon.io/v1/reference/sec/filings/0001660134-21-000026', 'source_filing_file_url': 'https://api.polygon.io/v1/reference/sec/filings/0001660134-21-000026/files/okta-20211031_htm.xml'}], 'status': 'OK', 'request_id': 'c26140ceab0fd97f5d9cc644eea44717', 'count': 1, 'next_url': 'https://api.polygon.io/vX/reference/financials?cursor=YXA9MjAyMTEwMzEmYXM9MDAwMTY2MDEzNC0yMS0wMDAwMjYmZW50aXRpZXMuY29tcGFueV9kYXRhLnRpY2tlcj1PS1RBJmhhc194YnJsPXRydWUmbGltaXQ9MSZzb3J0PXBlcmlvZF9vZl9yZXBvcnRfZGF0ZSZ0eXBlPTEwLVE'}\n","array_cells":[[8,12],[9,12],[10,12],[11,12]]},{"x":8,"y":13,"type":"PYTHON","value":"Oracle Corp","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 13)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nprint(stock_financials_json)\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:11],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:48:50.155Z","python_output":"{'results': [{'financials': {'balance_sheet': {'noncurrent_assets': {'label': 'Noncurrent Assets', 'value': 76969000000.0, 'unit': 'USD', 'order': 300}, 'fixed_assets': {'label': 'Fixed Assets', 'value': 8609000000.0, 'unit': 'USD', 'order': 400}, 'current_liabilities': {'label': 'Current Liabilities', 'value': 20833000000.0, 'unit': 'USD', 'order': 700}, 'assets': {'label': 'Assets', 'value': 108644000000.0, 'unit': 'USD', 'order': 100}, 'noncurrent_liabilities': {'label': 'Noncurrent Liabilities', 'value': 96022000000.0, 'unit': 'USD', 'order': 800}, 'equity_attributable_to_noncontrolling_interest': {'label': 'Equity Attributable To Noncontrolling Interest', 'value': 485000000.0, 'unit': 'USD', 'order': 1500}, 'equity_attributable_to_parent': {'label': 'Equity Attributable To Parent', 'value': -8696000000.0, 'unit': 'USD', 'order': 1600}, 'commitments_and_contingencies': {'label': 'Commitments and Contingencies', 'value': 0, 'unit': 'USD', 'order': 900}, 'other_than_fixed_noncurrent_assets': {'label': 'Other Than Fixed Noncurrent Assets', 'value': 76969000000.0, 'unit': 'USD', 'order': 500}, 'current_assets': {'label': 'Current Assets', 'value': 31675000000.0, 'unit': 'USD', 'order': 200}, 'liabilities_and_equity': {'label': 'Liabilities And Equity', 'value': 108644000000.0, 'unit': 'USD', 'order': 1900}, 'equity': {'label': 'Equity', 'value': -8211000000.0, 'unit': 'USD', 'order': 1400}, 'liabilities': {'label': 'Liabilities', 'value': 116855000000.0, 'unit': 'USD', 'order': 600}}, 'cash_flow_statement': {}, 'comprehensive_income': {'comprehensive_income_loss_attributable_to_noncontrolling_interest': {'label': 'Comprehensive Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 200}, 'other_comprehensive_income_loss': {'label': 'Other Comprehensive Income/Loss', 'value': 2257000000.0, 'unit': 'USD', 'order': 400}, 'comprehensive_income_loss_attributable_to_parent': {'label': 'Comprehensive Income/Loss Attributable To Parent', 'value': 2257000000.0, 'unit': 'USD', 'order': 300}, 'other_comprehensive_income_loss_attributable_to_parent': {'label': 'Other Comprehensive Income/Loss Attributable To Parent', 'value': -62000000.0, 'unit': 'USD', 'order': 600}, 'comprehensive_income_loss': {'label': 'Comprehensive Income/Loss', 'value': 2257000000.0, 'unit': 'USD', 'order': 100}}, 'income_statement': {'preferred_stock_dividends_and_other_adjustments': {'label': 'Preferred Stock Dividends And Other Adjustments', 'value': 0, 'unit': 'USD', 'order': 3900}, 'participating_securities_distributed_and_undistributed_earnings_loss_basic': {'label': 'Participating Securities, Distributed And Undistributed Earnings/Loss, Basic', 'value': 0, 'unit': 'USD', 'order': 3800}, 'operating_income_loss': {'label': 'Operating Income/Loss', 'value': 3822000000.0, 'unit': 'USD', 'order': 1100}, 'income_loss_from_continuing_operations_after_tax': {'label': 'Income/Loss From Continuing Operations After Tax', 'value': 2319000000.0, 'unit': 'USD', 'order': 1400}, 'basic_earnings_per_share': {'label': 'Basic Earnings Per Share', 'value': 0.87, 'unit': 'USD / shares', 'order': 4200}, 'net_income_loss': {'label': 'Net Income/Loss', 'value': 2319000000.0, 'unit': 'USD', 'order': 3200}, 'costs_and_expenses': {'label': 'Costs And Expenses', 'value': 6691000000.0, 'unit': 'USD', 'order': 600}, 'diluted_earnings_per_share': {'label': 'Diluted Earnings Per Share', 'value': 0.84, 'unit': 'USD / shares', 'order': 4300}, 'operating_expenses': {'label': 'Operating Expenses', 'value': -3822000000.0, 'unit': 'USD', 'order': 1000}, 'interest_expense_operating': {'label': 'Interest Expense, Operating', 'value': 667000000.0, 'unit': 'USD', 'order': 2700}, 'net_income_loss_available_to_common_stockholders_basic': {'label': 'Net Income/Loss Available To Common Stockholders, Basic', 'value': 2319000000.0, 'unit': 'USD', 'order': 3700}, 'net_income_loss_attributable_to_noncontrolling_interest': {'label': 'Net Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 3300}, 'income_loss_from_continuing_operations_before_tax': {'label': 'Income/Loss From Continuing Operations Before Tax', 'value': 3822000000.0, 'unit': 'USD', 'order': 1500}, 'benefits_costs_expenses': {'label': 'Benefits Costs and Expenses', 'value': 6691000000.0, 'unit': 'USD', 'order': 200}, 'revenues': {'label': 'Revenues', 'value': 10513000000.0, 'unit': 'USD', 'order': 100}, 'net_income_loss_attributable_to_parent': {'label': 'Net Income/Loss Attributable To Parent', 'value': 2319000000.0, 'unit': 'USD', 'order': 3500}, 'income_tax_expense_benefit': {'label': 'Income Tax Expense/Benefit', 'value': 521000000.0, 'unit': 'USD', 'order': 2200}}}, 'start_date': '2021-12-01', 'end_date': '2022-02-28', 'filing_date': '2022-03-11', 'cik': '0001341439', 'company_name': 'Oracle Corporation', 'fiscal_period': 'Q3', 'fiscal_year': '2022', 'source_filing_url': 'https://api.polygon.io/v1/reference/sec/filings/0001564590-22-009859', 'source_filing_file_url': 'https://api.polygon.io/v1/reference/sec/filings/0001564590-22-009859/files/orcl-10q_20220228_htm.xml'}], 'status': 'OK', 'request_id': '5fe1c2509e0933661af166d001f1b65a', 'count': 1, 'next_url': 'https://api.polygon.io/vX/reference/financials?cursor=YXA9MjAyMjAyMjgmYXM9MDAwMTU2NDU5MC0yMi0wMDk4NTkmZW50aXRpZXMuY29tcGFueV9kYXRhLnRpY2tlcj1PUkNMJmhhc194YnJsPXRydWUmbGltaXQ9MSZzb3J0PXBlcmlvZF9vZl9yZXBvcnRfZGF0ZSZ0eXBlPTEwLVE'}\n","array_cells":[[8,13],[9,13],[10,13],[11,13]]},{"x":8,"y":14,"type":"PYTHON","value":"DigitalOcean ","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 14)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nprint(stock_financials_json)\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:13],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:49:13.256Z","python_output":"{'results': [{'financials': {'comprehensive_income': {'comprehensive_income_loss': {'label': 'Comprehensive Income/Loss', 'value': -20049000.0, 'unit': 'USD', 'order': 100}, 'comprehensive_income_loss_attributable_to_noncontrolling_interest': {'label': 'Comprehensive Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 200}, 'other_comprehensive_income_loss': {'label': 'Other Comprehensive Income/Loss', 'value': -20049000.0, 'unit': 'USD', 'order': 400}, 'comprehensive_income_loss_attributable_to_parent': {'label': 'Comprehensive Income/Loss Attributable To Parent', 'value': -20049000.0, 'unit': 'USD', 'order': 300}, 'other_comprehensive_income_loss_attributable_to_parent': {'label': 'Other Comprehensive Income/Loss Attributable To Parent', 'value': -1926000.0, 'unit': 'USD', 'order': 600}}, 'income_statement': {'gross_profit': {'label': 'Gross Profit', 'value': 80570000.0, 'unit': 'USD', 'order': 800}, 'net_income_loss': {'label': 'Net Income/Loss', 'value': -18123000.0, 'unit': 'USD', 'order': 3200}, 'operating_expenses': {'label': 'Operating Expenses', 'value': 93709000.0, 'unit': 'USD', 'order': 1000}, 'net_income_loss_available_to_common_stockholders_basic': {'label': 'Net Income/Loss Available To Common Stockholders, Basic', 'value': -18123000.0, 'unit': 'USD', 'order': 3700}, 'participating_securities_distributed_and_undistributed_earnings_loss_basic': {'label': 'Participating Securities, Distributed And Undistributed Earnings/Loss, Basic', 'value': 0, 'unit': 'USD', 'order': 3800}, 'diluted_earnings_per_share': {'label': 'Diluted Earnings Per Share', 'value': -0.17, 'unit': 'USD / shares', 'order': 4300}, 'nonoperating_income_loss': {'label': 'Nonoperating Income/Loss', 'value': -1646000.0, 'unit': 'USD', 'order': 900}, 'operating_income_loss': {'label': 'Operating Income/Loss', 'value': -13139000.0, 'unit': 'USD', 'order': 1100}, 'income_tax_expense_benefit': {'label': 'Income Tax Expense/Benefit', 'value': 3338000.0, 'unit': 'USD', 'order': 2200}, 'income_loss_from_continuing_operations_after_tax': {'label': 'Income/Loss From Continuing Operations After Tax', 'value': -18123000.0, 'unit': 'USD', 'order': 1400}, 'preferred_stock_dividends_and_other_adjustments': {'label': 'Preferred Stock Dividends And Other Adjustments', 'value': 0, 'unit': 'USD', 'order': 3900}, 'net_income_loss_attributable_to_noncontrolling_interest': {'label': 'Net Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 3300}, 'costs_and_expenses': {'label': 'Costs And Expenses', 'value': 142112000.0, 'unit': 'USD', 'order': 600}, 'interest_expense_operating': {'label': 'Interest Expense, Operating', 'value': 2059000.0, 'unit': 'USD', 'order': 2700}, 'income_loss_from_continuing_operations_before_tax': {'label': 'Income/Loss From Continuing Operations Before Tax', 'value': -14785000.0, 'unit': 'USD', 'order': 1500}, 'benefits_costs_expenses': {'label': 'Benefits Costs and Expenses', 'value': 142112000.0, 'unit': 'USD', 'order': 200}, 'cost_of_revenue': {'label': 'Cost Of Revenue', 'value': 46757000.0, 'unit': 'USD', 'order': 300}, 'net_income_loss_attributable_to_parent': {'label': 'Net Income/Loss Attributable To Parent', 'value': -18123000.0, 'unit': 'USD', 'order': 3500}, 'basic_earnings_per_share': {'label': 'Basic Earnings Per Share', 'value': -0.17, 'unit': 'USD / shares', 'order': 4200}, 'revenues': {'label': 'Revenues', 'value': 127327000.0, 'unit': 'USD', 'order': 100}}, 'balance_sheet': {'current_liabilities': {'label': 'Current Liabilities', 'value': 62451000.0, 'unit': 'USD', 'order': 700}, 'liabilities_and_equity': {'label': 'Liabilities And Equity', 'value': 1956828000.0, 'unit': 'USD', 'order': 1900}, 'noncurrent_assets': {'label': 'Noncurrent Assets', 'value': 344924000.0, 'unit': 'USD', 'order': 300}, 'other_than_fixed_noncurrent_assets': {'label': 'Other Than Fixed Noncurrent Assets', 'value': 85539000.0, 'unit': 'USD', 'order': 500}, 'equity_attributable_to_noncontrolling_interest': {'label': 'Equity Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 1500}, 'current_assets': {'label': 'Current Assets', 'value': 1611904000.0, 'unit': 'USD', 'order': 200}, 'equity': {'label': 'Equity', 'value': 427831000.0, 'unit': 'USD', 'order': 1400}, 'assets': {'label': 'Assets', 'value': 1956828000.0, 'unit': 'USD', 'order': 100}, 'noncurrent_liabilities': {'label': 'Noncurrent Liabilities', 'value': 1466546000.0, 'unit': 'USD', 'order': 800}, 'fixed_assets': {'label': 'Fixed Assets', 'value': 259385000.0, 'unit': 'USD', 'order': 400}, 'liabilities': {'label': 'Liabilities', 'value': 1528997000.0, 'unit': 'USD', 'order': 600}, 'equity_attributable_to_parent': {'label': 'Equity Attributable To Parent', 'value': 427831000.0, 'unit': 'USD', 'order': 1600}}, 'cash_flow_statement': {'net_cash_flow_from_operating_activities_continuing': {'label': 'Net Cash Flow From Operating Activities, Continuing', 'value': 30283000.0, 'unit': 'USD', 'order': 200}, 'net_cash_flow_from_investing_activities_continuing': {'label': 'Net Cash Flow From Investing Activities, Continuing', 'value': -1120955000.0, 'unit': 'USD', 'order': 500}, 'net_cash_flow_from_financing_activities_continuing': {'label': 'Net Cash Flow From Financing Activities, Continuing', 'value': -157879000.0, 'unit': 'USD', 'order': 800}, 'net_cash_flow_continuing': {'label': 'Net Cash Flow, Continuing', 'value': -1248551000.0, 'unit': 'USD', 'order': 1200}, 'net_cash_flow': {'label': 'Net Cash Flow', 'value': -1248551000.0, 'unit': 'USD', 'order': 1100}, 'net_cash_flow_from_operating_activities': {'label': 'Net Cash Flow From Operating Activities', 'value': 30283000.0, 'unit': 'USD', 'order': 100}, 'net_cash_flow_from_financing_activities': {'label': 'Net Cash Flow From Financing Activities', 'value': -157879000.0, 'unit': 'USD', 'order': 700}, 'net_cash_flow_from_investing_activities': {'label': 'Net Cash Flow From Investing Activities', 'value': -1120955000.0, 'unit': 'USD', 'order': 400}}}, 'start_date': '2022-01-01', 'end_date': '2022-03-31', 'filing_date': '2022-05-05', 'cik': '0001582961', 'company_name': 'DigitalOcean Holdings, Inc.', 'fiscal_period': 'Q1', 'fiscal_year': '2022', 'source_filing_url': 'https://api.polygon.io/v1/reference/sec/filings/0001582961-22-000023', 'source_filing_file_url': 'https://api.polygon.io/v1/reference/sec/filings/0001582961-22-000023/files/docn-20220331_htm.xml'}], 'status': 'OK', 'request_id': '351a69b3005f88238e7b3ad7ba5a4412', 'count': 1, 'next_url': 'https://api.polygon.io/vX/reference/financials?cursor=YXA9MjAyMjAzMzEmYXM9MDAwMTU4Mjk2MS0yMi0wMDAwMjMmZW50aXRpZXMuY29tcGFueV9kYXRhLnRpY2tlcj1ET0NOJmhhc194YnJsPXRydWUmbGltaXQ9MSZzb3J0PXBlcmlvZF9vZl9yZXBvcnRfZGF0ZSZ0eXBlPTEwLVE'}\n","array_cells":[[8,14],[9,14],[10,14],[11,14]]},{"x":8,"y":15,"type":"PYTHON","value":"Oracle Corp","python_code":"from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(7, 15)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nprint(stock_financials_json)\nincome_statement = stock_financials_json[\"results\"][0][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\nresult = pd.DataFrame([[\n    name[:11],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]])\n","last_modified":"2022-05-12T22:49:26.397Z","python_output":"{'results': [{'financials': {'balance_sheet': {'equity_attributable_to_parent': {'label': 'Equity Attributable To Parent', 'value': -8696000000.0, 'unit': 'USD', 'order': 1600}, 'fixed_assets': {'label': 'Fixed Assets', 'value': 8609000000.0, 'unit': 'USD', 'order': 400}, 'noncurrent_liabilities': {'label': 'Noncurrent Liabilities', 'value': 96022000000.0, 'unit': 'USD', 'order': 800}, 'current_assets': {'label': 'Current Assets', 'value': 31675000000.0, 'unit': 'USD', 'order': 200}, 'equity': {'label': 'Equity', 'value': -8211000000.0, 'unit': 'USD', 'order': 1400}, 'liabilities': {'label': 'Liabilities', 'value': 116855000000.0, 'unit': 'USD', 'order': 600}, 'equity_attributable_to_noncontrolling_interest': {'label': 'Equity Attributable To Noncontrolling Interest', 'value': 485000000.0, 'unit': 'USD', 'order': 1500}, 'commitments_and_contingencies': {'label': 'Commitments and Contingencies', 'value': 0, 'unit': 'USD', 'order': 900}, 'liabilities_and_equity': {'label': 'Liabilities And Equity', 'value': 108644000000.0, 'unit': 'USD', 'order': 1900}, 'noncurrent_assets': {'label': 'Noncurrent Assets', 'value': 76969000000.0, 'unit': 'USD', 'order': 300}, 'current_liabilities': {'label': 'Current Liabilities', 'value': 20833000000.0, 'unit': 'USD', 'order': 700}, 'assets': {'label': 'Assets', 'value': 108644000000.0, 'unit': 'USD', 'order': 100}, 'other_than_fixed_noncurrent_assets': {'label': 'Other Than Fixed Noncurrent Assets', 'value': 76969000000.0, 'unit': 'USD', 'order': 500}}, 'cash_flow_statement': {}, 'comprehensive_income': {'other_comprehensive_income_loss_attributable_to_parent': {'label': 'Other Comprehensive Income/Loss Attributable To Parent', 'value': -62000000.0, 'unit': 'USD', 'order': 600}, 'comprehensive_income_loss': {'label': 'Comprehensive Income/Loss', 'value': 2257000000.0, 'unit': 'USD', 'order': 100}, 'comprehensive_income_loss_attributable_to_noncontrolling_interest': {'label': 'Comprehensive Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 200}, 'other_comprehensive_income_loss': {'label': 'Other Comprehensive Income/Loss', 'value': 2257000000.0, 'unit': 'USD', 'order': 400}, 'comprehensive_income_loss_attributable_to_parent': {'label': 'Comprehensive Income/Loss Attributable To Parent', 'value': 2257000000.0, 'unit': 'USD', 'order': 300}}, 'income_statement': {'basic_earnings_per_share': {'label': 'Basic Earnings Per Share', 'value': 0.87, 'unit': 'USD / shares', 'order': 4200}, 'net_income_loss': {'label': 'Net Income/Loss', 'value': 2319000000.0, 'unit': 'USD', 'order': 3200}, 'operating_expenses': {'label': 'Operating Expenses', 'value': -3822000000.0, 'unit': 'USD', 'order': 1000}, 'interest_expense_operating': {'label': 'Interest Expense, Operating', 'value': 667000000.0, 'unit': 'USD', 'order': 2700}, 'income_loss_from_continuing_operations_after_tax': {'label': 'Income/Loss From Continuing Operations After Tax', 'value': 2319000000.0, 'unit': 'USD', 'order': 1400}, 'net_income_loss_attributable_to_parent': {'label': 'Net Income/Loss Attributable To Parent', 'value': 2319000000.0, 'unit': 'USD', 'order': 3500}, 'participating_securities_distributed_and_undistributed_earnings_loss_basic': {'label': 'Participating Securities, Distributed And Undistributed Earnings/Loss, Basic', 'value': 0, 'unit': 'USD', 'order': 3800}, 'operating_income_loss': {'label': 'Operating Income/Loss', 'value': 3822000000.0, 'unit': 'USD', 'order': 1100}, 'revenues': {'label': 'Revenues', 'value': 10513000000.0, 'unit': 'USD', 'order': 100}, 'income_tax_expense_benefit': {'label': 'Income Tax Expense/Benefit', 'value': 521000000.0, 'unit': 'USD', 'order': 2200}, 'preferred_stock_dividends_and_other_adjustments': {'label': 'Preferred Stock Dividends And Other Adjustments', 'value': 0, 'unit': 'USD', 'order': 3900}, 'net_income_loss_available_to_common_stockholders_basic': {'label': 'Net Income/Loss Available To Common Stockholders, Basic', 'value': 2319000000.0, 'unit': 'USD', 'order': 3700}, 'net_income_loss_attributable_to_noncontrolling_interest': {'label': 'Net Income/Loss Attributable To Noncontrolling Interest', 'value': 0, 'unit': 'USD', 'order': 3300}, 'costs_and_expenses': {'label': 'Costs And Expenses', 'value': 6691000000.0, 'unit': 'USD', 'order': 600}, 'diluted_earnings_per_share': {'label': 'Diluted Earnings Per Share', 'value': 0.84, 'unit': 'USD / shares', 'order': 4300}, 'benefits_costs_expenses': {'label': 'Benefits Costs and Expenses', 'value': 6691000000.0, 'unit': 'USD', 'order': 200}, 'income_loss_from_continuing_operations_before_tax': {'label': 'Income/Loss From Continuing Operations Before Tax', 'value': 3822000000.0, 'unit': 'USD', 'order': 1500}}}, 'start_date': '2021-12-01', 'end_date': '2022-02-28', 'filing_date': '2022-03-11', 'cik': '0001341439', 'company_name': 'Oracle Corporation', 'fiscal_period': 'Q3', 'fiscal_year': '2022', 'source_filing_url': 'https://api.polygon.io/v1/reference/sec/filings/0001564590-22-009859', 'source_filing_file_url': 'https://api.polygon.io/v1/reference/sec/filings/0001564590-22-009859/files/orcl-10q_20220228_htm.xml'}], 'status': 'OK', 'request_id': 'dfe4c25962a324b3e7064c320e4677dd', 'count': 1, 'next_url': 'https://api.polygon.io/vX/reference/financials?cursor=YXA9MjAyMjAyMjgmYXM9MDAwMTU2NDU5MC0yMi0wMDk4NTkmZW50aXRpZXMuY29tcGFueV9kYXRhLnRpY2tlcj1PUkNMJmhhc194YnJsPXRydWUmbGltaXQ9MSZzb3J0PXBlcmlvZF9vZl9yZXBvcnRfZGF0ZSZ0eXBlPTEwLVE'}\n","array_cells":[[8,15],[9,15],[10,15],[11,15]]},{"x":9,"y":4,"type":"TEXT","value":"revenue","last_modified":"2022-05-12T18:52:38.127Z"},{"x":9,"y":6,"type":"COMPUTED","value":"$334,441,000","last_modified":"2022-05-17T00:50:37.555Z"},{"x":9,"y":7,"type":"COMPUTED","value":"$4,262,000,000","last_modified":"2022-05-12T18:53:44.190Z"},{"x":9,"y":8,"type":"COMPUTED","value":"$363,030,000","last_modified":"2022-05-12T18:54:10.626Z"},{"x":9,"y":9,"type":"COMPUTED","value":"$1,166,436,000","last_modified":"2022-05-12T22:46:57.451Z"},{"x":9,"y":10,"type":"COMPUTED","value":"$362,347,000","last_modified":"2022-05-12T22:47:23.065Z"},{"x":9,"y":11,"type":"COMPUTED","value":"$65,081,000","last_modified":"2022-05-12T22:47:43.347Z"},{"x":9,"y":12,"type":"COMPUTED","value":"$350,680,000","last_modified":"2022-05-12T22:48:26.642Z"},{"x":9,"y":13,"type":"TEXT","value":"$10,513,000,000","last_modified":"2022-05-14T00:13:25.427Z"},{"x":9,"y":14,"type":"COMPUTED","value":"$127,327,000","last_modified":"2022-05-12T22:49:13.256Z"},{"x":9,"y":15,"type":"COMPUTED","value":"$10,513,000,000","last_modified":"2022-05-12T22:49:26.397Z"},{"x":10,"y":4,"type":"TEXT","value":"market cap","last_modified":"2022-05-12T18:52:43.117Z"},{"x":10,"y":6,"type":"COMPUTED","value":"$4.98e+10","last_modified":"2022-05-17T00:50:37.555Z"},{"x":10,"y":7,"type":"COMPUTED","value":"$1.79e+11","last_modified":"2022-05-12T18:53:44.190Z"},{"x":10,"y":8,"type":"COMPUTED","value":"$3.08e+10","last_modified":"2022-05-12T18:54:10.626Z"},{"x":10,"y":9,"type":"COMPUTED","value":"$1.19e+10","last_modified":"2022-05-12T22:46:57.451Z"},{"x":10,"y":10,"type":"COMPUTED","value":"$4.83e+09","last_modified":"2022-05-12T22:47:23.065Z"},{"x":10,"y":11,"type":"COMPUTED","value":"$1.03e+09","last_modified":"2022-05-12T22:47:43.347Z"},{"x":10,"y":12,"type":"COMPUTED","value":"$1.33e+10","last_modified":"2022-05-12T22:48:26.642Z"},{"x":10,"y":13,"type":"COMPUTED","value":"$1.90e+11","last_modified":"2022-05-12T22:48:50.155Z"},{"x":10,"y":14,"type":"COMPUTED","value":"$3.27e+09","last_modified":"2022-05-12T22:49:13.256Z"},{"x":10,"y":15,"type":"COMPUTED","value":"$1.90e+11","last_modified":"2022-05-12T22:49:26.397Z"},{"x":11,"y":4,"type":"TEXT","value":"multiple","last_modified":"2022-05-12T18:52:38.127Z"},{"x":11,"y":6,"type":"COMPUTED","value":"148.97","last_modified":"2022-05-17T00:50:37.555Z"},{"x":11,"y":7,"type":"COMPUTED","value":"42.05","last_modified":"2022-05-12T18:53:44.190Z"},{"x":11,"y":8,"type":"COMPUTED","value":"84.93","last_modified":"2022-05-12T18:54:10.626Z"},{"x":11,"y":9,"type":"COMPUTED","value":"10.22","last_modified":"2022-05-12T22:46:57.451Z"},{"x":11,"y":10,"type":"COMPUTED","value":"13.33","last_modified":"2022-05-12T22:47:23.065Z"},{"x":11,"y":11,"type":"COMPUTED","value":"15.80","last_modified":"2022-05-12T22:47:43.347Z"},{"x":11,"y":12,"type":"COMPUTED","value":"37.99","last_modified":"2022-05-12T22:48:26.642Z"},{"x":11,"y":13,"type":"COMPUTED","value":"18.03","last_modified":"2022-05-12T22:48:50.155Z"},{"x":11,"y":14,"type":"COMPUTED","value":"25.71","last_modified":"2022-05-12T22:49:13.256Z"},{"x":11,"y":15,"type":"COMPUTED","value":"18.03","last_modified":"2022-05-12T22:49:26.397Z"},{"x":11,"y":22,"type":"PYTHON","value":"41.51","python_code":"df = getCells((11, 6), (11, 15))\n\ndf[0] = df[0].astype(float)\n\n\"{:.2f}\".format(float(df.mean(0)))\n","last_modified":"2022-05-17T00:50:37.679Z","python_output":"","array_cells":[],"dependent_cells":[[11,6],[11,7],[11,8],[11,9],[11,10],[11,11],[11,12],[11,13],[11,14],[11,15]]},{"x":11,"y":23,"type":"TEXT","value":"AVERAGE","last_modified":"2022-05-14T15:35:25.982Z"},{"x":13,"y":2,"type":"TEXT","value":"Analysis","last_modified":"2022-05-11T16:48:26.882Z"},{"x":13,"y":4,"type":"TEXT","value":"Implied Cap","last_modified":"2022-05-14T15:37:51.315Z"},{"x":13,"y":6,"type":"PYTHON","value":"13704691812","python_code":"from decimal import Decimal\n\nresult = []\n\nfor i in range(0, 10):\n    val = c(11, 6 + i) / c(5, 6 + i) * Decimal((await c(4, 6 + i)).value)\n    result.append(int(val))\n","last_modified":"2022-05-17T00:50:38.266Z","python_output":"","array_cells":[[13,6],[13,7],[13,8],[13,9],[13,10],[13,11],[13,12],[13,13],[13,14],[13,15]],"dependent_cells":[[11,6],[5,6],[4,6],[11,7],[5,7],[4,7],[11,8],[5,8],[4,8],[11,9],[5,9],[4,9],[11,10],[5,10],[4,10],[11,11],[5,11],[4,11],[11,12],[5,12],[4,12],[11,13],[5,13],[4,13],[11,14],[5,14],[4,14],[11,15],[5,15]]},{"x":13,"y":7,"type":"COMPUTED","value":"2144532843","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":8,"type":"COMPUTED","value":"69048780487","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":9,"type":"COMPUTED","value":"8144062500","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":10,"type":"COMPUTED","value":"2132800000","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":11,"type":"COMPUTED","value":"1042750197","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":12,"type":"COMPUTED","value":"1785679942","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":13,"type":"COMPUTED","value":"2705176294","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":14,"type":"COMPUTED","value":"3034225019","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":15,"type":"COMPUTED","value":"1982994923","last_modified":"2022-05-17T00:50:38.266Z"},{"x":13,"y":22,"type":"PYTHON","value":"105725694017","python_code":"df = getCells((13, 6), (13, 15))\n\ndf[0] = df[0].astype(float)\n\nint(df.sum(0))\n","last_modified":"2022-05-17T00:50:38.508Z","python_output":"","array_cells":[],"dependent_cells":[[13,6],[13,7],[13,8],[13,9],[13,10],[13,11],[13,12],[13,13],[13,14],[13,15]]},{"x":13,"y":23,"type":"TEXT","value":"TOTAL","last_modified":"2022-05-14T15:36:27.623Z"},{"x":14,"y":4,"type":"TEXT","value":"Valuation","last_modified":"2022-05-14T15:37:58.886Z"},{"x":14,"y":6,"type":"PYTHON","value":"12458810","python_code":"from decimal import Decimal\n\nresult = []\n\nfor i in range(0, 10):\n    val = c(15, 6 + i) * c(1, 6 + i)\n    result.append(int(val))\n","last_modified":"2022-05-17T00:50:38.727Z","python_output":"","array_cells":[[14,6],[14,7],[14,8],[14,9],[14,10],[14,11],[14,12],[14,13],[14,14],[14,15]]},{"x":14,"y":7,"type":"COMPUTED","value":"1715624","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":8,"type":"COMPUTED","value":"41792679","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":9,"type":"COMPUTED","value":"119765625","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":10,"type":"COMPUTED","value":"8378854","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":11,"type":"COMPUTED","value":"1556345","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":12,"type":"COMPUTED","value":"11586469","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":13,"type":"COMPUTED","value":"13525880","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":14,"type":"COMPUTED","value":"10114085","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":15,"type":"COMPUTED","value":"27456858","last_modified":"2022-05-17T00:50:38.727Z"},{"x":14,"y":22,"type":"PYTHON","value":"$248,351,229","python_code":"df = getCells((14, 6), (14, 15))\n\ndf[0] = df[0].astype(float)\n\n\"${:,}\".format(int(df.sum(0)))\n","last_modified":"2022-05-17T00:50:38.932Z","python_output":"","array_cells":[],"dependent_cells":[[14,6],[14,7],[14,8],[14,9],[14,10],[14,11],[14,12],[14,13],[14,14],[14,15]]},{"x":15,"y":4,"type":"TEXT","value":"Return Multiple","last_modified":"2022-05-11T16:46:47.007Z"},{"x":15,"y":6,"type":"PYTHON","value":"1.245881","python_code":"result = []\n\nfor i in range(0, 10):\n    result.append(\n        \"{:,.6f}\".format(c(13, 6 + i) / c(4, 6 + i))\n    )\n","last_modified":"2022-05-17T00:50:38.438Z","python_output":"","array_cells":[[15,6],[15,7],[15,8],[15,9],[15,10],[15,11],[15,12],[15,13],[15,14],[15,15]],"dependent_cells":[[13,6],[4,6],[13,7],[4,7]]},{"x":15,"y":7,"type":"COMPUTED","value":"0.214453","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":8,"type":"COMPUTED","value":"1.817073","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":9,"type":"COMPUTED","value":"7.984375","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":10,"type":"COMPUTED","value":"0.380857","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":11,"type":"COMPUTED","value":"0.311269","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":12,"type":"COMPUTED","value":"0.681557","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":13,"type":"COMPUTED","value":"1.352588","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":14,"type":"COMPUTED","value":"2.022817","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":15,"type":"COMPUTED","value":"1.525381","last_modified":"2022-05-17T00:50:38.438Z"},{"x":15,"y":22,"type":"PYTHON","value":"1.75","python_code":"df = getCells((15, 6), (15, 15))\n\ndf[0] = df[0].astype(float)\n\n\"{:.2f}\".format(float(df.mean(0)))\n","last_modified":"2022-05-17T00:50:38.797Z","python_output":"","array_cells":[],"dependent_cells":[[15,6],[15,7],[15,8],[15,9],[15,10],[15,11],[15,12],[15,13],[15,14],[15,15]]},{"x":15,"y":23,"type":"TEXT","value":"AVERAGE","last_modified":"2022-05-14T15:36:24.627Z"},{"x":17,"y":2,"type":"TEXT","value":"Portfolio Summary","last_modified":"2022-05-14T15:43:00.889Z"},{"x":17,"y":6,"type":"TEXT","value":"CAPITAL INVESTED","last_modified":"2022-05-14T15:43:17.108Z"},{"x":17,"y":8,"type":"TEXT","value":"Average","last_modified":"2022-05-14T15:46:00.832Z"},{"x":17,"y":9,"type":"TEXT","value":"ENTRY VALUATION","last_modified":"2022-05-14T15:45:57.539Z"},{"x":17,"y":10,"type":"TEXT","value":"ENTRY REVENUE MULTIPLE","last_modified":"2022-05-14T15:47:57.270Z"},{"x":17,"y":12,"type":"TEXT","value":"CURRENT VALUATION","last_modified":"2022-05-14T15:47:45.126Z"},{"x":17,"y":13,"type":"TEXT","value":"CURRENT REVENUE MULTIPLE","last_modified":"2022-05-14T15:47:51.047Z"},{"x":17,"y":15,"type":"TEXT","value":"TVPI","last_modified":"2022-05-14T15:48:06.736Z"},{"x":17,"y":16,"type":"TEXT","value":"IRR","last_modified":"2022-05-14T15:48:38.767Z"},{"x":19,"y":6,"type":"PYTHON","value":"$133,000,000","python_code":"c(1, 22)\n","last_modified":"2022-05-17T00:47:20.873Z","python_output":"","array_cells":[],"dependent_cells":[[1,22]]},{"x":19,"y":9,"type":"PYTHON","value":"7639000000.0","python_code":"df = getCells((4, 6), (4, 15))\n\ndf = df.astype(float)\n\ndf[0].mean()\n","last_modified":"2022-05-17T00:49:30.501Z","python_output":"","array_cells":[],"dependent_cells":[[4,6],[4,7],[4,8],[4,9],[4,10],[4,11],[4,12],[4,13],[4,14],[4,15]]},{"x":19,"y":10,"type":"PYTHON","value":"54.30300000000001","python_code":"df = getCells((5, 6), (5, 15))\n\ndf = df.astype(float)\n\ndf[0].mean()\n","last_modified":"2022-05-17T00:49:48.762Z","python_output":"","array_cells":[],"dependent_cells":[[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],[5,12],[5,13],[5,14],[5,15]]},{"x":19,"y":12,"type":"PYTHON","value":"24835122.9","python_code":"df = getCells((14, 6), (14, 15))\n\ndf = df.astype(float)\n\ndf[0].mean()\n","last_modified":"2022-05-17T00:50:39.024Z","python_output":"","array_cells":[],"dependent_cells":[[14,6],[14,7],[14,8],[14,9],[14,10],[14,11],[14,12],[14,13],[14,14],[14,15]]},{"x":19,"y":13,"type":"PYTHON","value":"1.7536251","python_code":"df = getCells((15, 6), (15, 15))\n\ndf = df.astype(float)\n\ndf[0].mean()\n","last_modified":"2022-05-17T00:50:38.862Z","python_output":"","array_cells":[],"dependent_cells":[[15,6],[15,7],[15,8],[15,9],[15,10],[15,11],[15,12],[15,13],[15,14],[15,15]]},{"x":19,"y":15,"type":"PYTHON","value":"1.75","python_code":"c(15, 22)\n","last_modified":"2022-05-17T00:50:39.099Z","python_output":"","array_cells":[],"dependent_cells":[[15,22]]},{"x":19,"y":16,"type":"PYTHON","value":"45.12%","python_code":"\"45.12%\"\n","last_modified":"2022-05-14T15:48:58.852Z","python_output":"","array_cells":[],"dependent_cells":[]}],"dgraph":"{\"vertices\":{\"dataType\":\"Map\",\"value\":[[\"0,3\",null],[\"1,2\",null],[\"0,2\",null],[\"14,5\",null],[\"15,3\",null],[\"18,5\",null],[\"20,5\",null],[\"12,5\",null],[\"11,5\",null],[\"16,5\",null],[\"16,3\",null],[\"7,6\",null],[\"8,4\",null],[\"11,6\",null],[\"13,6\",null],[\"5,6\",null],[\"4,6\",null],[\"15,6\",null],[\"9,6\",null],[\"8,6\",null],[\"3,6\",null],[\"12,6\",null],[\"10,6\",null],[\"7,7\",null],[\"8,7\",null],[\"7,8\",null],[\"8,8\",null],[\"4,7\",null],[\"3,7\",null],[\"4,8\",null],[\"3,8\",null],[\"4,9\",null],[\"3,9\",null],[\"4,10\",null],[\"3,10\",null],[\"4,11\",null],[\"3,11\",null],[\"4,12\",null],[\"3,12\",null],[\"4,13\",null],[\"3,13\",null],[\"4,14\",null],[\"3,14\",null],[\"4,15\",null],[\"3,15\",null],[\"7,9\",null],[\"8,9\",null],[\"7,10\",null],[\"8,10\",null],[\"7,11\",null],[\"8,11\",null],[\"8,12\",null],[\"7,12\",null],[\"7,13\",null],[\"8,13\",null],[\"7,14\",null],[\"8,14\",null],[\"7,15\",null],[\"8,15\",null],[\"11,7\",null],[\"5,7\",null],[\"11,8\",null],[\"5,8\",null],[\"11,9\",null],[\"5,9\",null],[\"11,10\",null],[\"5,10\",null],[\"11,11\",null],[\"5,11\",null],[\"11,12\",null],[\"5,12\",null],[\"11,13\",null],[\"5,13\",null],[\"11,14\",null],[\"5,14\",null],[\"11,15\",null],[\"5,15\",null],[\"13,7\",null],[\"13,8\",null],[\"13,9\",null],[\"13,10\",null],[\"13,11\",null],[\"13,12\",null],[\"13,13\",null],[\"13,14\",null],[\"13,15\",null],[\"1,6\",null],[\"1,22\",null],[\"1,7\",null],[\"1,8\",null],[\"1,9\",null],[\"1,10\",null],[\"1,11\",null],[\"1,12\",null],[\"1,13\",null],[\"1,14\",null],[\"1,15\",null],[\"5,22\",null],[\"4,22\",null],[\"3,22\",null],[\"11,22\",null],[\"13,22\",null],[\"15,22\",null],[\"15,7\",null],[\"15,8\",null],[\"15,9\",null],[\"15,10\",null],[\"15,11\",null],[\"15,12\",null],[\"15,13\",null],[\"15,14\",null],[\"15,15\",null],[\"14,6\",null],[\"14,22\",null],[\"14,7\",null],[\"14,8\",null],[\"14,9\",null],[\"14,10\",null],[\"14,11\",null],[\"14,12\",null],[\"14,13\",null],[\"14,14\",null],[\"14,15\",null],[\"19,15\",null],[\"19,6\",null],[\"19,9\",null],[\"19,10\",null],[\"19,12\",null],[\"19,13\",null]]},\"edges\":{\"dataType\":\"Map\",\"value\":[[\"0,3\",{\"dataType\":\"Map\",\"value\":[[\"1,2\",1]]}],[\"1,2\",{\"dataType\":\"Map\",\"value\":[]}],[\"0,2\",{\"dataType\":\"Map\",\"value\":[[\"1,2\",1]]}],[\"14,5\",{\"dataType\":\"Map\",\"value\":[[\"15,3\",1],[\"16,5\",1],[\"16,3\",1]]}],[\"15,3\",{\"dataType\":\"Map\",\"value\":[]}],[\"18,5\",{\"dataType\":\"Map\",\"value\":[[\"20,5\",1]]}],[\"20,5\",{\"dataType\":\"Map\",\"value\":[]}],[\"12,5\",{\"dataType\":\"Map\",\"value\":[[\"20,5\",1]]}],[\"11,5\",{\"dataType\":\"Map\",\"value\":[]}],[\"16,5\",{\"dataType\":\"Map\",\"value\":[]}],[\"16,3\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,6\",{\"dataType\":\"Map\",\"value\":[[\"8,4\",1],[\"9,6\",1],[\"8,6\",1]]}],[\"8,4\",{\"dataType\":\"Map\",\"value\":[]}],[\"11,6\",{\"dataType\":\"Map\",\"value\":[[\"12,6\",1],[\"11,22\",1],[\"13,6\",1]]}],[\"13,6\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"5,6\",{\"dataType\":\"Map\",\"value\":[[\"12,6\",1],[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"4,6\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"12,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1],[\"15,6\",1]]}],[\"15,6\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"9,6\",{\"dataType\":\"Map\",\"value\":[]}],[\"8,6\",{\"dataType\":\"Map\",\"value\":[]}],[\"3,6\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"12,6\",1],[\"3,22\",1]]}],[\"12,6\",{\"dataType\":\"Map\",\"value\":[]}],[\"10,6\",{\"dataType\":\"Map\",\"value\":[[\"12,6\",1]]}],[\"7,7\",{\"dataType\":\"Map\",\"value\":[[\"8,7\",1]]}],[\"8,7\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,8\",{\"dataType\":\"Map\",\"value\":[[\"8,8\",1]]}],[\"8,8\",{\"dataType\":\"Map\",\"value\":[]}],[\"4,7\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1],[\"15,6\",1]]}],[\"3,7\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,8\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,8\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,9\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,9\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,10\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,10\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,11\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,11\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,12\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,12\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,13\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,13\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,14\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1],[\"13,6\",1]]}],[\"3,14\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"4,15\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"13,6\",1],[\"15,6\",1],[\"4,22\",1],[\"19,9\",1]]}],[\"3,15\",{\"dataType\":\"Map\",\"value\":[[\"5,6\",1],[\"3,22\",1]]}],[\"7,9\",{\"dataType\":\"Map\",\"value\":[[\"8,9\",1]]}],[\"8,9\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,10\",{\"dataType\":\"Map\",\"value\":[[\"8,10\",1]]}],[\"8,10\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,11\",{\"dataType\":\"Map\",\"value\":[[\"8,11\",1],[\"8,12\",1]]}],[\"8,11\",{\"dataType\":\"Map\",\"value\":[]}],[\"8,12\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,12\",{\"dataType\":\"Map\",\"value\":[[\"8,12\",1]]}],[\"7,13\",{\"dataType\":\"Map\",\"value\":[[\"8,13\",1]]}],[\"8,13\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,14\",{\"dataType\":\"Map\",\"value\":[[\"8,14\",1]]}],[\"8,14\",{\"dataType\":\"Map\",\"value\":[]}],[\"7,15\",{\"dataType\":\"Map\",\"value\":[[\"8,15\",1]]}],[\"8,15\",{\"dataType\":\"Map\",\"value\":[]}],[\"11,7\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,7\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,8\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,8\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,9\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,9\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,10\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,10\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,11\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,11\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,12\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,12\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,13\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,13\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,14\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,14\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"11,15\",{\"dataType\":\"Map\",\"value\":[[\"11,22\",1],[\"13,6\",1]]}],[\"5,15\",{\"dataType\":\"Map\",\"value\":[[\"5,22\",1],[\"19,10\",1],[\"13,6\",1]]}],[\"13,7\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,8\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,9\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,10\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,11\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,12\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,13\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,14\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"13,15\",{\"dataType\":\"Map\",\"value\":[[\"15,6\",1],[\"13,22\",1]]}],[\"1,6\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,22\",{\"dataType\":\"Map\",\"value\":[[\"19,6\",1]]}],[\"1,7\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,8\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,9\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,10\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,11\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,12\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,13\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,14\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"1,15\",{\"dataType\":\"Map\",\"value\":[[\"1,22\",1],[\"14,6\",1]]}],[\"5,22\",{\"dataType\":\"Map\",\"value\":[]}],[\"4,22\",{\"dataType\":\"Map\",\"value\":[]}],[\"3,22\",{\"dataType\":\"Map\",\"value\":[]}],[\"11,22\",{\"dataType\":\"Map\",\"value\":[]}],[\"13,22\",{\"dataType\":\"Map\",\"value\":[]}],[\"15,22\",{\"dataType\":\"Map\",\"value\":[[\"19,15\",1]]}],[\"15,7\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,8\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,9\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,10\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,11\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,12\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,13\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,14\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"15,15\",{\"dataType\":\"Map\",\"value\":[[\"14,6\",1],[\"15,22\",1],[\"19,13\",1]]}],[\"14,6\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,22\",{\"dataType\":\"Map\",\"value\":[[\"19,15\",1]]}],[\"14,7\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,8\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,9\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,10\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,11\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,12\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,13\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,14\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"14,15\",{\"dataType\":\"Map\",\"value\":[[\"14,22\",1],[\"19,12\",1]]}],[\"19,15\",{\"dataType\":\"Map\",\"value\":[]}],[\"19,6\",{\"dataType\":\"Map\",\"value\":[]}],[\"19,9\",{\"dataType\":\"Map\",\"value\":[]}],[\"19,10\",{\"dataType\":\"Map\",\"value\":[]}],[\"19,12\",{\"dataType\":\"Map\",\"value\":[]}],[\"19,13\",{\"dataType\":\"Map\",\"value\":[]}]]},\"edgesCount\":999}"}